
//! Autogenerated weights for `pallet_clubs`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-11-13, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `sangeet`, CPU: `AMD Ryzen 5 4500U with Radeon Graphics`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_clubs
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/CoolClubs/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

///weight function needed for pallet-clubs
/// Weight functions needed for pallet_membership.
pub trait WeightInfo {
	fn create_club( ) -> Weight;
	fn add_members( ) -> Weight;
	fn transfer_ownership( ) -> Weight;
	fn set_the_annual_expences( ) -> Weight;
	fn cancel_membership( ) -> Weight;
	fn on_initialize( ) -> Weight;
	fn update_membership_period() ->Weight ; 
	
}



/// Weight functions for `pallet_clubs`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: ClubsOnChain NextClubId (r:1 w:1)
	// Storage: ClubsOnChain Clubs (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn create_club() -> Weight {
		// Minimum execution time: 55_033 nanoseconds.
		Weight::from_ref_time(104_676_000 as u64)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: ClubsOnChain Clubs (r:1 w:1)
	// Storage: ClubsOnChain MemberShip (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	// Storage: ClubsOnChain ExpiredOn (r:0 w:1)
	fn add_members() -> Weight {
		// Minimum execution time: 84_048 nanoseconds.
		Weight::from_ref_time(89_398_000 as u64)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: ClubsOnChain Clubs (r:1 w:2)
	// Storage: System Account (r:2 w:2)
	fn transfer_ownership() -> Weight {
		// Minimum execution time: 54_503 nanoseconds.
		Weight::from_ref_time(55_263_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: ClubsOnChain Clubs (r:1 w:1)
	fn set_the_annual_expences() -> Weight {
		// Minimum execution time: 27_592 nanoseconds.
		Weight::from_ref_time(28_033_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ClubsOnChain Clubs (r:1 w:1)
	// Storage: ClubsOnChain MemberShip (r:1 w:1)
	// Storage: ClubsOnChain ExpiredOn (r:1 w:1)
	fn cancel_membership() -> Weight {
		// Minimum execution time: 39_725 nanoseconds.
		Weight::from_ref_time(39_845_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: ClubsOnChain ExpiredOn (r:2 w:2)
	// Storage: ClubsOnChain MemberShip (r:1 w:1)
	// Storage: ClubsOnChain Clubs (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	fn on_initialize() -> Weight {
		// Minimum execution time: 62_667 nanoseconds.
		Weight::from_ref_time(63_068_000 as u64)
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: ClubsOnChain MemberShip (r:1 w:1)
	fn update_membership_period() -> Weight {
		// Minimum execution time: 28_574 nanoseconds.
		Weight::from_ref_time(29_095_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
